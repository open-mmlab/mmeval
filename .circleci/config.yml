version: 2.1

jobs:

  lint:
    docker:
      - image: cimg/python:3.7.4
    steps:
      - checkout
      - run:
          name: Linting
          command: |
            pip install pre-commit
            pre-commit run --all-files
      - run:
          name: Check docstring coverage
          command: |
            pip install interrogate
            interrogate -v --ignore-init-method --ignore-module --ignore-nested-functions --ignore-regex "__repr__" --fail-under 80 mmeval

  build_cpu:
    parameters:
      # The python version must match available image tags in
      # https://circleci.com/developer/images/image/cimg/python
      python:
        type: string
        default: "3.7.4"
      torch:
        type: string
      paddle:
        type: string
        default: "2.3.2"
      tensorflow:
        type: string
        default: "2.4"
    docker:
      - image: cimg/python:<< parameters.python >>
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install PyTorch via pip
          command: |
            python -V
            pip install --upgrade pip
            pip install torch==<< parameters.torch >>+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - run:
          name: Install PaddlePaddle via pip
          command: |
            pip install paddlepaddle==<< parameters.paddle >> protobuf==3.20.*
      - run:
          name: Install TensorFlow via pip
          command: |
            pip install tensorflow==<< parameters.tensorflow >>
      - run:
          name: Install JAX via pip
          command: |
            pip install "jax[cpu]"
      - run:
          name: Install OneFlow via pip
          command: |
            # Install Oneflow often failed, we just skip it if failed.
            pip install -f https://release.oneflow.info oneflow==0.8.0+cpu "numpy<1.24.0" || true
      - run:
          name: Install mmeval and dependencies
          command: |
            pip install -r requirements/tests.txt
            pip install -r requirements/optional.txt
            pip install -e .
      - run:
          name: Run unittests
          command: |
            coverage run --branch --source mmeval -m pytest -vv tests/
            coverage xml
            coverage report -m

  build_mpirun_and_tf:
    parameters:
      tensorflow:
        type: string
    docker:
      - image: cimg/python:3.7.4
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install Libraries
          command: |
            sudo apt-get update
            sudo apt-get install -y libopenmpi-dev
      - run:
          name: Install TensorFlow and Horovod via pip
          command: |
            python -V
            pip install --upgrade pip
            pip install mpi4py
            pip install tensorflow==<< parameters.tensorflow >>
            HOROVOD_WITH_TENSORFLOW=1 pip install horovod[tensorflow]
            horovodrun --check-build
      - run:
          name: Install mmeval dependencies and install mmeval
          command: |
            pip install -r requirements/tests.txt
            pip install -r requirements/optional.txt
            pip install -e .
      - run:
          name: Run dist_backends unittests with mpi
          command: |
            mpirun -np 2 pytest -vv --capture=no --with-mpi tests/test_core/test_dist_backends

  build_cuda:
    parameters:
      torch:
        type: string
      cuda:
        type: enum
        enum: ["11.7", "11.8"]
      cudnn:
        type: integer
        default: 8
    machine:
      image: linux-cuda-11:default
      # docker_layer_caching: true
    resource_class: gpu.nvidia.small
    steps:
      - checkout
      - run:
          # CLoning repos in VM since Docker doesn't have access to the private key
          name: Clone Repos
          command: |
            git clone -b main --depth 1 ssh://git@github.com/open-mmlab/mmengine.git /home/circleci/mmengine
      - run:
          name: Install nvidia-container-toolkit and Restart Docker
          command: |
            sudo apt-get update
            sudo apt-get install -y nvidia-container-toolkit
            sudo systemctl restart docker
      - run:
          name: Build Docker image
          command: |
            docker build .circleci/docker -t mmeval:gpu --build-arg PYTORCH=<< parameters.torch >> --build-arg CUDA=<< parameters.cuda >> --build-arg CUDNN=<< parameters.cudnn >>
            docker run --gpus all -t -d -v /home/circleci/project:/mmeval -v /home/circleci/mmengine:/mmengine -w /mmeval --name mmeval mmeval:gpu
            docker exec mmeval apt-get install -y git
      - run:
          name: Install mmeval dependencies
          command: |
            docker exec mmeval pip install paddlepaddle-gpu==2.3.2.post112 -f https://www.paddlepaddle.org.cn/whl/linux/mkl/avx/stable.html
            docker exec mmeval pip install -r requirements/tests.txt
            docker exec mmeval pip install -r requirements/optional.txt
      - run:
          name: Build and install
          command: |
            docker exec mmeval pip install -e .
      - run:
          name: Run unittests
          command: |
            docker exec mmeval python -m pytest -vv tests/

workflows:
  unit_tests:
    jobs:
      - lint
      - build_cpu:
          name: build_cpu_torch1.6_tf2.4
          torch: 1.6.0
          tensorflow: "2.4"
          requires:
            - lint
      - build_cpu:
          name: build_cpu_torch1.7_tf_2.6
          torch: 1.7.0
          tensorflow: "2.6"
          requires:
            - lint
      - build_cpu:
          name: build_cpu_torch1.8_tf2.7_py3.9
          torch: 1.8.0
          python: "3.9.0"
          tensorflow: "2.7"
          requires:
            - lint
      - build_cpu:
          name: build_cpu_torch1.9_paddle2.3_tf2.8_py3.8
          torch: 1.9.0
          paddle: 2.3.2
          tensorflow: "2.8"
          python: "3.8.12"
          requires:
            - lint
      - build_cpu:
          name: build_cpu_torch1.9_paddle2.10_py3.9
          torch: 1.9.0
          paddle: 2.4.0rc0
          tensorflow: "2.10"
          python: "3.9.0"
          requires:
            - lint
      - build_mpirun_and_tf:
          name: build_mpirun_and_tf_2.7
          tensorflow: "2.7"
          requires:
            - build_cpu_torch1.6_tf2.4
            - build_cpu_torch1.7_tf_2.6
            - build_cpu_torch1.8_tf2.7_py3.9
            - build_cpu_torch1.9_paddle2.3_tf2.8_py3.8
            - build_cpu_torch1.9_paddle2.10_py3.9
      - build_cuda:
          name: build_cuda117_torch1.8_paddle2.3
          torch: 1.8.1
          cuda: "11.7"
          requires:
            - lint